#!/bin/sh -e

domain="$(basename $(pwd))"
default_config=\
"[ ca ]
default_ca = CA_default

[ CA_default ]
dir = .
certs = certs
certificate = CA.crt
private_key = CA.key
default_md = sha256
default_days = 365
email_in_dn = no

[ req_distinguished_name]
#C = 2 letter country code
#ST = State
#L = Locality
#O = Organization name
#OU = Organizational unit
#emailAddress = email address
#CN = *.*.$domain

[ req ]
distinguished_name = req_distinguished_name
prompt = no
encrypt_key = no
default_md = sha256
default_bits = 2048"

usage () {
    echo "Usage: $0 init|gen|sign|resign"
}

init () {
    mkdir -p "certs"
    mkdir -p "keys"
    echo "$default_config" > "openssl.cnf"
    openssl genrsa \
        -out CA.key
    openssl req \
        -x509 \
        -config openssl.cnf \
        -new \
        -subj "CN=*.*.$domain" \
        -key CA.key \
        -out CA.crt
}

sign_key () {
    echo "Generating CSR for $1.$domain."
    csr="$(mktemp -t ssl-ca)"
    openssl req \
        -key keys/$1 \
        -new \
        -config openssl.cnf \
        -subj "/CN=*.*.$1.$domain" \
        -out "$csr"
    echo "Generating cert for $1.$domain."
    openssl x509 \
        -req \
        -in "$csr" \
        -out "certs/$1" \
        -CA CA.crt \
        -CAcreateserial \
        -extensions v3_ca \
        -CAkey CA.key
    rm "$csr"
}

gen_key () {
    echo "Generating key for $1.$domain."
    openssl genrsa -out "keys/$1"
}

if [ $# -lt 1 ]
then
    usage
    exit 1
fi

case "$1" in
    init)
        init
        ;;
    gen)
        gen_key "$2"
        sign_key "$2"
        ;;
    sign)
        for key in keys/*
        do
            if [ ! -f "certs/$(basename $key)" ]
            then
                sign_key "$(basename $key)"
            fi
        done
        ;;
    resign)
        for key in keys/*
        do
            sign_key "$(basename $key)"
        done
        ;;
    *)
        usage
        exit 1
        ;;
esac
